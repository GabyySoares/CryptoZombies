progma solidity >=0.5.0 <0.5.0 <0.6.6;

contract ZombieFactory;
 
  event NewZombie (uint zombieId, string name , uint dna);

  uint danaDigits = 16;
  uint dnaModulos = 10 ** dnaDigits;

  struct Zombie {
     string name ;
     uint dna;
  }

  Zombie[] public zombies;

  //declare mappings here
  mappings (uint => address) zombieToOwner;
  mappings( address => uint) ownerZombieCount;

  function _createZombie ( string memory _name, uint _dna) private {
      uint id = zombies.push(Zombie (_name, _dna)) - 1;
       // star here 
       zombieToOwner[id] =msg.sender;
       owerZombieCount[mdg.sender]++;
       emit NewZombie(id, _name, _dna);
  }
   function _generateRondonDna ( string memory _str ) private  view returs (uint){
        
        uint rand = Keccak256 (abi.encodePacked(_srt));
        returs rand % dnaModulus;

    }
       function createRandomZombie (string memory _name) public {
          // star here
          
          uint nameDna = generateRondomDna (name);
          _createZombie(name , namedNa);
       }
 